\relax 
\providecommand\zref@newlabel[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Implementation}{11}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{C:implementation}{{3}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Overview}{11}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces How the Kihi Runner executes a program.}}{11}\protected@file@percent }
\newlabel{fig:kihi_execution_process}{{3.1}{11}}
\@writefile{tdo}{\contentsline {todo}{\color@fb@x {}{black}{}{orange}{\leavevmode {\color  {orange}o}}\  maybe in background elaborate on what a virtual machine is? }{12}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Configuration}{12}\protected@file@percent }
\@writefile{tdo}{\contentsline {todo}{\color@fb@x {}{black}{}{orange}{\leavevmode {\color  {orange}o}}\  move this: This intermediary representation is mostly identical to the grammar shown in figure 2.3\hbox {} barring implementation details, debugging symbols, and optimisation mechanisms. The optimisation mechanisms are of particular interest and are discussed in greater detail in section 3.6\hbox {}. The executable takes as an argument the path to a text file contain Kihi source code, encoded in either UTF-8 or ASCII, and subsequently runs the program, emitting any outputs to standard output. }{12}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Implementation Language}{12}\protected@file@percent }
\@writefile{tdo}{\contentsline {todo}{\color@fb@x {}{black}{}{orange}{\leavevmode {\color  {orange}o}}\ Reference rust webpage?}{12}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Intermediary Representation}{13}\protected@file@percent }
\newlabel{sec:implementation_intermediary_representation}{{3.4}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Kihi intermediary representation of a simple program: \lstinline {apply (drop) ()}}}{13}\protected@file@percent }
\newlabel{fig:kihi_intermediary_representation_example_1}{{3.2}{13}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}Executors}{13}\protected@file@percent }
\newlabel{sec:implementation_executors}{{3.5}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.1}Reduce Executor}{13}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.2}Stack Executor}{13}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Pseudocode for a term rewriting based Kihi implementation}}{14}\protected@file@percent }
\newlabel{fig:term_rewriting_pseudocode}{{3.3}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Pseudocode for a stack based Kihi execution}}{14}\protected@file@percent }
\newlabel{fig:stack_pseudocode}{{3.4}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {3.6}Optimisation}{15}\protected@file@percent }
\newlabel{sec:implementation_optimisation}{{3.6}{15}}
\@writefile{tdo}{\contentsline {todo}{\color@fb@x {}{black}{}{orange}{\leavevmode {\color  {orange}o}}\ Talk about why this might be faster than the ordinary execution}{16}\protected@file@percent }
\@writefile{tdo}{\contentsline {todo}{\color@fb@x {}{black}{}{orange}{\leavevmode {\color  {orange}o}}\ AST for the optimised representations}{16}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces Intermediary representation of the `count' program from figure 2.4\hbox {} after symbol detection.}}{17}\protected@file@percent }
\newlabel{fig:kihi_intermediary_representation_example_2}{{3.5}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces The optimised representations of some example programs}}{18}\protected@file@percent }
\newlabel{fig:kihi_symbol_optimisation}{{3.6}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.7}{\ignorespaces Pseudocode for a stack based Kihi execution}}{18}\protected@file@percent }
\newlabel{fig:symbol_optimisation_pseudocode}{{3.7}{18}}
\@setckpt{03_implementation}{
\setcounter{page}{19}
\setcounter{equation}{0}
\setcounter{enumi}{5}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{3}
\setcounter{section}{6}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{7}
\setcounter{table}{0}
\setcounter{float@type}{16}
\setcounter{@@conflict}{0}
\setcounter{lstnumber}{28}
\setcounter{@todonotes@numberoftodonotes}{16}
\setcounter{mdf@globalstyle@cnt}{1}
\setcounter{mdfcountframes}{0}
\setcounter{mdf@env@i}{0}
\setcounter{mdf@env@ii}{0}
\setcounter{mdf@zref@counter}{1}
\setcounter{fig}{0}
\setcounter{lstlisting}{0}
}
